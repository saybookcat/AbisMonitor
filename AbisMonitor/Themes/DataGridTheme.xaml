<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <!--编辑突变按钮按使用的Template-->
    <Style x:Key="EditButtonTemplateStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Image x:Name="img" Source="pack://application:,,,/Resources/Images/Edit_16x16.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter TargetName="img" Property="Source"
                                    Value="pack://application:,,,/Resources/Images/Edit2_16x16.png" />
                        </Trigger>
                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Opacity" Value="0.6"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGridRow">
        <Setter Property="Height" Value="21" />
        <Setter Property="FontSize" Value="12"></Setter>
        <!--<Setter Property="Foreground" Value="#FF303131"></Setter>-->
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <!--<Setter Property="Background" Value="#B1D6F0"></Setter>-->
                <!--<Setter Property="Foreground" Value="#FF303131"></Setter>-->
                <Setter Property="FontWeight" Value="Bold"></Setter>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#BFDCF0"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="DataGridRowCdrResultStyle" TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Style.Triggers>

            <DataTrigger Binding="{Binding Result}" Value="-1" >
                <Setter Property="Foreground" Value="#ff9000" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Result}" Value="3" >
                <Setter Property="Foreground" Value="Red" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IsSelectedRowSytle" TargetType="DataGridRow" BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsSelect}" Value="True">
                <Setter Property="Foreground" Value="#ff9000"></Setter>
                <Setter Property="FontStyle" Value="Italic"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!-- DataGrid Background -->
    <LinearGradientBrush x:Key="BlueLightGradientBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientStop Offset="0" Color="White"/>
        <GradientStop Offset="0.654" Color="White"/>
        <GradientStop Offset="1" Color="White"/>
    </LinearGradientBrush>

    <Style x:Key="DataGridContentCenterSytle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="RawSignalDataContenSytle" TargetType="{x:Type TextBlock}">
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="Margin"  Value="5,0,10,0"></Setter>
    </Style>


    <Style TargetType="DataGrid" x:Key="DataGridStyle">
        <Setter Property="SelectionMode" Value="Single"></Setter>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="ClipboardCopyMode" Value="ExcludeHeader"></Setter>

        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalGridLinesBrush" Value="#B0CEDD"></Setter>
        <Setter Property="VerticalGridLinesBrush" Value="#B0CEDD"></Setter>
        <Setter Property="AlternatingRowBackground" Value="#F2F4F7"></Setter>
        <Setter Property="BorderBrush" Value="#FFA6CCF2" />
        <Setter Property="RowBackground" Value="White" />

        <Setter Property="AutoGenerateColumns" Value="False"></Setter>
        <Setter Property="IsReadOnly" Value="True"></Setter>


        <Setter Property="AlternationCount" Value="2"></Setter>
        <Setter Property="Background" Value="{StaticResource BlueLightGradientBrush}" />

        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"></Setter>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"></Setter>

        <Setter Property="RowHeaderWidth" Value="0"></Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="DataGridColumnHeaderStyle">
        <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
        <Setter Property="MinHeight" Value="28" />

        <Setter Property="Foreground" Value="#454545" />
        <Setter Property="FontWeight" Value="Bold"></Setter>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>

    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="DataContentHeaderStyle" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
    </Style>

    <!--设置选中行的颜色，实际是由于IsSelected=true触发的效果作用于CellStyle上-->
    <Style TargetType="DataGridCell">
        <Style.Triggers >
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#B1D6F0"></Setter>
                <Setter Property="BorderBrush" Value="#B1D6F0"></Setter>
                <Setter Property="Foreground" Value="#FF303131"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RawSignalHeaderStyle" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="Padding" Value="5,0,0,0"></Setter>
    </Style>
</ResourceDictionary>